stages:
  - build
  - test
  - deploy
  - clean

variables:
  IMAGE_TAG: celery:$CI_PIPELINE_ID
  CONTAINER_NAME: celery-container-$CI_PIPELINE_ID
  
Celery_image_build:
  stage: build
  image: docker:19.03
  services:
    - docker:19.03-dind
  script:
    - echo "Celery build, Dockerfile:"
    - cat Dockerfile
    - docker build -t $IMAGE_TAG .

Celery_container_deploy1:
  stage: deploy
  image: docker:19.03
  services:
    - docker:19.03-dind
  script:
    # 检查并删除已存在的容器
    - if [ $(docker ps -aq -f name=$CONTAINER_NAME) ]; then docker rm -f $CONTAINER_NAME; fi
    # 运行新的容器
    - docker run -e "REDIS_DB_PASSWORD=$REDIS_DB_PASSWORD" -e "REDIS_DB_HOSTNAME=$REDIS_DB_HOSTNAME" -e "REDIS_DB_PORT=$REDIS_DB_PORT" -e "REDIS_DB_NAME=$REDIS_DB_NAME" -e "REDIS_USER_NAME=$REDIS_USER_NAME" -e "SMTPSERVER=$SMTPSERVER" -e "SMTPUSER=$SMTPUSER" -e "SMTPPASSWORD=$SMTPPASSWORD" -e "MQ_HOSTNAME=$MQ_HOSTNAME" -e "MQ_USERNAME=$MQ_USERNAME" -e "MQ_USERPASSWORD=$MQ_USERPASSWORD" -e "MQ_DBNAME=$MQ_DBNAME" -e "MQ_DBPORT=$MQ_DBPORT" --name $CONTAINER_NAME -d $IMAGE_TAG
